[{"/Users/maxpinheiro/Documents/a-eye/src/index.js":"1","/Users/maxpinheiro/Documents/a-eye/src/App.js":"2","/Users/maxpinheiro/Documents/a-eye/src/serviceWorker.js":"3","/Users/maxpinheiro/Documents/a-eye/src/Navbar.js":"4","/Users/maxpinheiro/Documents/a-eye/src/footer.js":"5","/Users/maxpinheiro/Documents/a-eye/src/landingPage/LandingPage.tsx":"6","/Users/maxpinheiro/Documents/a-eye/src/modulePage/ModulePage.tsx":"7","/Users/maxpinheiro/Documents/a-eye/src/aboutPage/AboutPage.tsx":"8","/Users/maxpinheiro/Documents/a-eye/src/ModuleDropdown.js":"9","/Users/maxpinheiro/Documents/a-eye/src/aboutPage/ProfileCard.tsx":"10","/Users/maxpinheiro/Documents/a-eye/src/modulePage/ModuleSection.tsx":"11","/Users/maxpinheiro/Documents/a-eye/src/landingPage/ModuleIntro.tsx":"12","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/gaborFilter/gaborFilter.tsx":"13","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/imageSelector/ImageSelectableDemo.tsx":"14","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/diffofgaussian/DiffOfGaussian.tsx":"15","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/haarWavelet/HaarWaveletDemo.tsx":"16","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/gaussianBlur/GaussianBlurDemo.tsx":"17","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/pca/PCA.tsx":"18","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/index.ts":"19","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/haarWavelet/haarTransform.tsx":"20","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/imageSelector/ImageSelector.tsx":"21","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/gaborFilter/AngleSelector.tsx":"22","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/KernelDisplay.tsx":"23","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/InteractiveFilter.tsx":"24","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/DiffofFiltered.tsx":"25","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/FilterByKernel.tsx":"26","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/common/BasicScatter.tsx":"27","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/interactiveClusteringExample.tsx":"28","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/kmeansStepExample.tsx":"29","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/kmeans.tsx":"30","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/filter.tsx":"31","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/chartjs-plugin-dragdata.d.ts":"32","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/utils.ts":"33"},{"size":567,"mtime":1612213014240,"results":"34","hashOfConfig":"35"},{"size":1412,"mtime":1612391362088,"results":"36","hashOfConfig":"35"},{"size":5086,"mtime":1599511861849,"results":"37","hashOfConfig":"35"},{"size":1644,"mtime":1612391362089,"results":"38","hashOfConfig":"35"},{"size":1837,"mtime":1612391362096,"results":"39","hashOfConfig":"35"},{"size":1952,"mtime":1612391390481,"results":"40","hashOfConfig":"35"},{"size":1978,"mtime":1612391390448,"results":"41","hashOfConfig":"35"},{"size":2310,"mtime":1612391362089,"results":"42","hashOfConfig":"35"},{"size":1756,"mtime":1612213014226,"results":"43","hashOfConfig":"35"},{"size":2267,"mtime":1612391362089,"results":"44","hashOfConfig":"35"},{"size":6459,"mtime":1612392976778,"results":"45","hashOfConfig":"35"},{"size":1696,"mtime":1612392976756,"results":"46","hashOfConfig":"35"},{"size":6396,"mtime":1612391362169,"results":"47","hashOfConfig":"35"},{"size":1171,"mtime":1612391390437,"results":"48","hashOfConfig":"35"},{"size":5541,"mtime":1612391362169,"results":"49","hashOfConfig":"35"},{"size":1513,"mtime":1605310423330,"results":"50","hashOfConfig":"35"},{"size":3337,"mtime":1612391362169,"results":"51","hashOfConfig":"35"},{"size":5985,"mtime":1612391390438,"results":"52","hashOfConfig":"35"},{"size":250,"mtime":1612392976779,"results":"53","hashOfConfig":"35"},{"size":3786,"mtime":1612391362170,"results":"54","hashOfConfig":"35"},{"size":2044,"mtime":1612391362171,"results":"55","hashOfConfig":"35"},{"size":2845,"mtime":1605310423328,"results":"56","hashOfConfig":"35"},{"size":2087,"mtime":1612391362169,"results":"57","hashOfConfig":"35"},{"size":3000,"mtime":1605310423327,"results":"58","hashOfConfig":"35"},{"size":1695,"mtime":1605310423326,"results":"59","hashOfConfig":"35"},{"size":631,"mtime":1605310423327,"results":"60","hashOfConfig":"35"},{"size":1992,"mtime":1612213014244,"results":"61","hashOfConfig":"35"},{"size":12091,"mtime":1612392976779,"results":"62","hashOfConfig":"35"},{"size":5730,"mtime":1612392976779,"results":"63","hashOfConfig":"35"},{"size":2824,"mtime":1612392976779,"results":"64","hashOfConfig":"35"},{"size":2999,"mtime":1605310423327,"results":"65","hashOfConfig":"35"},{"size":88,"mtime":1612392976778,"results":"66","hashOfConfig":"35"},{"size":4684,"mtime":1612392976781,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1x2j8d1",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxpinheiro/Documents/a-eye/src/index.js",[],["142","143"],"/Users/maxpinheiro/Documents/a-eye/src/App.js",[],"/Users/maxpinheiro/Documents/a-eye/src/serviceWorker.js",[],"/Users/maxpinheiro/Documents/a-eye/src/Navbar.js",[],"/Users/maxpinheiro/Documents/a-eye/src/footer.js",[],"/Users/maxpinheiro/Documents/a-eye/src/landingPage/LandingPage.tsx",[],["144","145"],"/Users/maxpinheiro/Documents/a-eye/src/modulePage/ModulePage.tsx",["146"],"import React from \"react\";\nimport {RouteComponentProps} from 'react-router';\nimport ModuleSection from \"./ModuleSection\";\nimport module8 from '../media/modules/module_8.json';\nimport module9 from '../media/modules/module_9.json';\nimport module10 from '../media/modules/module_10.json';\nimport module11 from '../media/modules/module_11.json';\n\nexport interface ModuleSubsection {\n    \"title\": string,\n    \"body\": string,\n    \"imgSrc\": string\n}\ninterface ModuleSection {\n    \"title\": string,\n    \"colorScheme\": string,\n    \"subsections\": ModuleSubsection[],\n    \"demoComp\": string\n}\ninterface Module {\n    \"number\": number,\n    \"title\": string,\n    \"sections\": ModuleSection[]\n}\nconst modules: Record<string, Module> = {'computer-vision': module8, 'classification' : module9, 'perceptrons' : module10, 'neural-nets' : module11}\n\n/**\n * Renders the entire module page.\n * @param props.match.params.module name of the current module (route has path /modules/module)\n */\nexport default function ModulePage(props: RouteComponentProps<{module: string}>) {\n    const module = modules[props.match.params.module];\n    if (!module) {\n        return (\n            <div>\n                <p>This module does not exist.</p>\n                <a href=\"/\">Return to home</a>\n            </div>\n        )\n    }\n    return (\n        <div className=\"container w-screen\">\n            <p className={`w-screen p-4 text-5xl font-bold font-opensans bg-modulePaleBlue text-moduleNavy`}>{module.title}</p>\n            <ul>\n                {\n                    module.sections.map((section) =>\n                        <ModuleSection title={section.title}\n                                       sections={section.subsections}\n                                       colorScheme={section.colorScheme}\n                                       key={section.title}\n                                       demoComp={section.demoComp}/>\n                    )\n                }\n            </ul>\n        </div>\n    );\n}","/Users/maxpinheiro/Documents/a-eye/src/aboutPage/AboutPage.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/ModuleDropdown.js",[],"/Users/maxpinheiro/Documents/a-eye/src/aboutPage/ProfileCard.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modulePage/ModuleSection.tsx",["147"],"/Users/maxpinheiro/Documents/a-eye/src/landingPage/ModuleIntro.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/gaborFilter/gaborFilter.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/imageSelector/ImageSelectableDemo.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/diffofgaussian/DiffOfGaussian.tsx",["148"],"import React, { useState } from 'react';\nimport KernelDisplay from '../common/KernelDisplay';\nimport FilterByKernel from '../common/FilterByKernel';\nimport DiffofFiltered from '../common/DiffofFiltered';\n\n// have to use require for this bc it doesn't have a module declaration file or something\nconst generateGaussianKernel = require('gaussian-convolution-kernel');\n\n\nconst DoG = (props: { labelColor: string, imgUrl: string }) => {\n    const [kernel, setKernel] = useState<number[] | undefined>(undefined);\n    const [kernel2, setKernel2] = useState<number[] | undefined>(undefined);\n    const [kernelGrid, setKernelGrid] = useState<number[][] | undefined>(undefined);\n    const [kernelGrid2, setKernelGrid2] = useState<number[][] | undefined>(undefined);\n\n\n    const configureKernel = (kernelSize: number, sigma: number, sigma2: number) => {\n\n        const newKernel: number[] = generateGaussianKernel(kernelSize, sigma);\n        const newKernel2: number[] = generateGaussianKernel(kernelSize, sigma2);\n        const newKernelGrid = newKernel.reduce((rslt: number[][], val, idx) => {\n            if (idx % kernelSize === 0) rslt.push([]);\n            rslt[rslt.length - 1].push(val);\n            return rslt;\n        }, []);\n        const newKernelGrid2 = newKernel2.reduce((rslt: number[][], val, idx) => {\n            if (idx % kernelSize === 0) rslt.push([]);\n            rslt[rslt.length - 1].push(val);\n            return rslt;\n        }, []);\n\n\n        // take difference of the two filters\n        // dog = difference of gaussians\n        // let dog = newKernel.map((inner, i) => (inner - newKernel2[i]));\n\n        // let dogGrid = newKernelGrid.map((inner, i) => inner.map((v, j) => (v - newKernelGrid2[i][j])));\n\n        setKernel(newKernel);\n        setKernel2(newKernel2);\n        setKernelGrid(newKernelGrid);\n        setKernelGrid2(newKernelGrid2);\n    }\n\n    return (\n        <div className={`flex flex-col items-center font-bold m-4 ${props.labelColor}`}>\n            <KernelConfig onConfig={configureKernel} labelColor={props.labelColor} />\n            <div className=\"grid grid-cols-2 items-center mb-5\" style={{ width: '1100px' }}>\n                <KernelDisplay kernelGrid={kernelGrid} labelColor={props.labelColor} />\n                <KernelDisplay kernelGrid={kernelGrid2} labelColor={props.labelColor} />\n            </div>\n\n            <p>Filter by the First Kernel</p>\n            <FilterByKernel kernel={kernel} imgUrl={props.imgUrl} />\n            <p>Filter by the Second Kernel</p>\n            <FilterByKernel kernel={kernel2} imgUrl={props.imgUrl} />\n            <p>Take the Difference of the Filtered Images</p>\n            <DiffofFiltered kernel={kernel} kernel2={kernel2} imgUrl={props.imgUrl} />\n\n        </div>\n    )\n}\n\nconst KernelConfig = (props: { onConfig: (kernelSize: number, sigma: number, sigma2: number) => void, labelColor: string }) => {\n    const [kernelSize, setKernelSize] = useState<number>(5);\n    const [sigma, setSigma] = useState<number>(1);\n    const [sigma2, setSigma2] = useState<number>(3);\n\n    const changeSigma = (e: any) => setSigma(parseFloat(e.target.value));\n    const changeSigma2 = (e: any) => setSigma2(parseFloat(e.target.value));\n    const changeKernelSize = (e: any) => setKernelSize(parseInt(e.target.value));\n\n    const invalidSize = (kernelSize % 2 !== 1 || kernelSize < 3 || kernelSize > 7)\n    const invalidConfig = !sigma || invalidSize;\n    return (\n        <div>\n            <div className={`font-bold m-3 ${props.labelColor}`}>\n                Sigma\n                <input className=\"mx-2 w-64\"\n                    type=\"range\" min=\".1\" max=\"10\" step=\"any\"\n                    value={sigma} onChange={(e) => changeSigma(e)} />\n                <input className=\"number-input text-black\"\n                    type=\"number\" min=\".1\" max=\"10\"\n                    value={sigma} onChange={(e) => changeSigma(e)} />\n            </div>\n            <div className={`font-bold m-3 ${props.labelColor}`}>\n                Sigma 2\n                <input className=\"mx-2 w-64\"\n                    type=\"range\" min=\".1\" max=\"10\" step=\"any\"\n                    value={sigma2} onChange={(e) => changeSigma2(e)} />\n                <input className=\"number-input text-black\"\n                    type=\"number\" min=\".1\" max=\"10\"\n                    value={sigma2} onChange={(e) => changeSigma2(e)} />\n            </div>\n            <div className={`font-bold m-3 h-10 ${props.labelColor}`}>\n                Kernel Size\n                <input className=\"mx-2 w-64\"\n                    type=\"range\" min=\"3\" max=\"7\" step={2}\n                    value={kernelSize} onChange={(e) => changeKernelSize(e)} />\n                <input className=\"number-input text-black\"\n                    type=\"number\" min=\"3\" max=\"7\" step={2}\n                    value={kernelSize} onChange={(e) => changeKernelSize(e)} />\n                <div className=\"font-light italic text-sm\">\n                    {invalidSize ? 'Enter an odd kernel size, between 3 and 7' : ''}\n                </div>\n            </div>\n            <button className=\"basic-button\" disabled={invalidConfig} onClick={e => props.onConfig(kernelSize, sigma, sigma2)}>\n                Generate Kernel\n            </button>\n        </div>\n    );\n}\n\nfunction getBg(val: number, kernel?: number[]) {\n    if (!kernel) return;\n    const max = kernel[Math.floor(kernel.length / 2)];\n    const min = kernel[0];\n    const red = 200 - ((val - min) / (max - min) * 200);\n    return { background: `rgb(${red}, 212, 192)` };\n}\n\n\n\nexport default DoG;","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/haarWavelet/HaarWaveletDemo.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/gaussianBlur/GaussianBlurDemo.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/pca/PCA.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/index.ts",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/haarWavelet/haarTransform.tsx",["149"],"export { haarFilter};\n\n// https://stevenbas.art/examples/ImageProcessing/ex4/\n\n/**\n * Applies the haar transformation to the image in `inCanvas`, and draws the output\n * on `outCanvas`\n * \n * @param inCanvas \n * @param outCanvas \n * @param iterations how many recursions to do\n */\nfunction haarFilter(inCanvas: HTMLCanvasElement, outCanvas: HTMLCanvasElement, iterations: number) {\n    const inData = inCanvas.getContext(\"2d\")?.getImageData(0,0, inCanvas.width, inCanvas.height);\n    const outData = outCanvas.getContext(\"2d\")?.getImageData(0,0, outCanvas.width, outCanvas.height);\n    if (!inData || !outData) return;\n\n    const inPix = inData.data;\n    const imgWidth = inCanvas.width; //should be the same for outCanvas\n    const imgHeight = inCanvas.height;\n\n    // initialize array with original pix values\n    const haar :number[][][] = [];\n    for (let row = 0; row < imgHeight; row++) { \n        haar[row] = [];\n        for (let col = 0; col < imgWidth; col++) {\n            haar[row][col] = [];\n            for (let i = 0; i < 3; i++) {\n                 haar[row][col][i] = inPix[4*(row*imgWidth + col + i)];\n            }\n        }\n    }\n\n    //Do a Haar Wavelet Transform\n    let currWidth = imgWidth;\n    let currHeight = imgHeight;\n    let haarRow = [];\n    while( (currWidth > 1 || currHeight > 1) && (iterations > 1) ) {\n        iterations = iterations -1;\n\n        //Do it for each row first\n        if (currWidth > 1) {\n            for(let row = 0; row < currHeight; row++){\n                for (let i = 0; i < 3; i++) {\n                    for(let col = 0; col < currWidth; col++) {\n                        haarRow[col] = haar[row][col][i];\n                    }\n\n                    oneDHaarTransform(haarRow);\n                    \n                    for(let col = 0; col < currWidth; col++) {\n                        haar[row][col][i] = haarRow[col];\n                    }\n                }\n            }\n        }\n\n        //Then perform Haar transform on each column\n        haarRow = [];\n        if (currHeight > 1) {\n            for(let col = 0; col < currWidth; col++) {\n                for (let i = 0; i < 3; i++) {\n                    for(let row = 0; row < currHeight; row++) {\n                        haarRow[row] = haar[row][col][i];\n                    }\n\n                    oneDHaarTransform(haarRow);\n                    \n                    for(let row = 0; row < currHeight; row++) {\n                        haar[row][col][i] = haarRow[row];\n                    }\n                }\n            }\n        }\n        haarRow = [];\n\n        if (currHeight > 1) {currHeight  = currHeight/2};\n        if (currWidth > 1)  {currWidth = currWidth/2};\n    }\n\n    //Copy pix data to canvas\n    const outPix = outData.data;\n    for (let row = 0; row < imgHeight; row++) {\n        for (let col = 0; col < imgWidth; col++) {\n            outPix[4*(row*imgWidth + col) ] = haar[row][col][0];\n            outPix[4*(row*imgWidth + col)+1 ] = haar[row][col][1];\n\n            outPix[4*(row*imgWidth + col)+2 ] =  haar[row][col][2];\n\n            outPix[4*(row*imgWidth + col)+3 ] =  255;\n        };\n    };\n    console.log(outData);\n    outCanvas.getContext(\"2d\")?.putImageData(outData,0,0);\n}\n\n\nfunction oneDHaarTransform(pixRow: number[]) {\n    var sum = 0;\n    var diff = 0;\n    var halfLen = pixRow.length/2;\n    var tempHaar = [];\n\n    //It only recurses on first half of the array\n    for (var i = 0; i < halfLen; i++) {\n            sum = pixRow[2*i] + pixRow[2*i + 1];\n            sum = sum / Math.sqrt(2);\n            diff = pixRow[2*i] - pixRow[2*i + 1];\n            diff = diff / Math.sqrt(2);\n            tempHaar[i] = sum;\n            tempHaar[i + halfLen] = diff\n    }\n    for (var i = 0; i < pixRow.length; i++) {\n        pixRow[i] = tempHaar[i];\n    }\n};\n\n","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/imageSelector/ImageSelector.tsx",["150","151"],"import React, { useEffect } from 'react';\nimport './ImageSelector.css';\n\nconst ImageSelector = (props: { currImg: string, onSelect: (img: string, imgUrl: string) => any }) => {\n    useEffect(() => props.onSelect(props.currImg, ALL_IMGS[props.currImg]),\n        []);\n\n    const makeImg = (key: string) => (\n        <img key={key}\n            className={key === props.currImg ? 'selected' : ''}\n            src={ALL_IMGS[key]}\n            onClick={() => props.onSelect(key, ALL_IMGS[key])}\n        />\n    );\n\n    return (\n        <div className='image-selector'>\n            Select Image\n            <div className='selection-window'>\n                {Object.keys(ALL_IMGS).map(key => {\n                    return ALL_IMGS[key] && makeImg(key);\n                }\n                )}\n            </div>\n        </div>\n    );\n}\n\n\n\nconst ALL_IMGS: { [name: string]: any } = {\n    'three.png': require('../../../media/modules/computerVision/imageLibrary/three.png'),\n    'diamond.png': require('../../../media/modules/computerVision/imageLibrary/diamond.png'),\n    'square.png': require('../../../media/modules/computerVision/imageLibrary/square.png'),\n    'circles.jpg': require('../../../media/modules/computerVision/imageLibrary/circles.jpg'),\n    'dogSilhouette.jpg': require('../../../media/modules/computerVision/imageLibrary/dogSilhouette.jpg'),\n    'purpleFlowers.jpeg': require('../../../media/modules/computerVision/imageLibrary/purpleFlowers.jpeg'),\n    'steps.png': require('../../../media/modules/computerVision/imageLibrary/steps.png'),\n    'tabbyCat.jpg': require('../../../media/modules/computerVision/imageLibrary/tabbyCat.jpg'),\n    'teddyBear.jpg': require('../../../media/modules/computerVision/imageLibrary/teddyBear.jpg'),\n    'zebra.jpg': require('../../../media/modules/computerVision/imageLibrary/zebra.jpg'),\n    'bwWoman.jpg': require('../../../media/modules/computerVision/imageLibrary/bwWoman.jpg'),\n    'bwMan.jpg': require('../../../media/modules/computerVision/imageLibrary/bwMan.jpg')\n}\n\nexport default ImageSelector;\n","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/gaborFilter/AngleSelector.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/KernelDisplay.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/InteractiveFilter.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/DiffofFiltered.tsx",["152","153","154"],"import React from 'react';\nimport InteractiveFilter from './InteractiveFilter';\nimport { convolute } from './filter';\nimport { getPixels, createImageData } from './filter';\n\nconst pixelmatch = require('pixelmatch');\n\n// http://dev.theomader.com/gaussian-kernel-calculator/\n// https://blog.cloudboost.io/using-html5-canvas-with-react-ff7d93f5dc76\n\nconst FilterByDiffKernel = (props: { kernel?: number[], kernel2?:number[], imgUrl: string }) => {\n\n    return (\n        <InteractiveFilter\n            disabled={!props.kernel}\n            imgUrl={props.imgUrl}\n            filter={(inCanvas, outCanvas) => {\n                \n                \n                props.kernel && convolute(inCanvas, outCanvas, false, props.kernel)\n                let check = getPixels(outCanvas)\n                if (!check) { \n                    return ;\n                }\n                let result1 = Uint8ClampedArray.from(check.data)\n                \n                \n                props.kernel2 && convolute(inCanvas, outCanvas, false, props.kernel2)\n                let check2 = getPixels(outCanvas)\n                \n                if (!check2) { \n                    return ;\n                }\n                let result2 = Uint8ClampedArray.from(check2.data)\n\n                let width = check.width\n                let height = check.height\n                \n                let diff = result1.map((pix, i)=> ((i+1)%4== 0 ? 255 : 255 - Math.abs(pix - result2[i])));\n                \n\n                let output = new ImageData(diff, width, height)\n                \n                outCanvas.getContext('2d')?.putImageData(output, 0, 0);\n\n\n            }}\n        />\n    )\n}\n\nexport default FilterByDiffKernel;","/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/FilterByKernel.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/common/BasicScatter.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/interactiveClusteringExample.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/kmeansStepExample.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/kmeans.tsx",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/computerVision/common/filter.tsx",["155"],"\nexport {\n  convolute, getPixels, createImageData\n};\n\n/// utility functions for filtering / manipulating a DOM canvas\n// reference: https://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\n/**\n * Run an image convolution based on inCanvas, and draws the output to outCanvas.\n * Don't ask me how any of this works!!!! I dont know!!!!!!! \n * \n * @param inCanvas the canvas to be filtered, with an image already drawn on it\n * @param outCanvas the canvas to be outputted to\n * @param animate whether or not to animate the filter by each row of pixels\n * @param weights the kernel (matrix of numbers)\n * @param opaque (optional) is the image opaque?\n */\nfunction convolute(inCanvas: HTMLCanvasElement, outCanvas: HTMLCanvasElement, animate: boolean, weights: number[], opaque?: boolean) {\n  const pixels = getPixels(inCanvas);\n  const output = getPixels(outCanvas);\n  if (!pixels || !output) return;\n\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var src = pixels.data;\n  var sw = pixels.width;\n  var sh = pixels.height;\n  // pad output by the convolution matrix\n  var w = sw;\n  var h = sh;\n  var dst = output.data;\n  // go through the destination image pixels\n  var alphaFac = opaque ? 1 : 0;\n\n  const processRow = (y : number) => {\n    for (var x = 0; x < w; x++) {\n      var sy = y;\n      var sx = x;\n      var dstOff = (y * w + x) * 4;\n      var nextDstOff = ((y + 1) * w + x) * 4;\n      // calculate the weighed sum of the source image pixels that\n      // fall under the convolution matrix\n      var r = 0, g = 0, b = 0, a = 0;\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = sy + cy - halfSide;\n          var scx = sx + cx - halfSide;\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = (scy * sw + scx) * 4;\n            var wt = weights[cy * side + cx];\n            r += src[srcOff] * wt;\n            g += src[srcOff + 1] * wt;\n            b += src[srcOff + 2] * wt;\n            a += src[srcOff + 3] * wt;\n          }\n        }\n      }\n      \n      dst[dstOff] = r;\n      dst[dstOff + 1] = g;\n      dst[dstOff + 2] = b;\n      dst[dstOff + 3] = a + alphaFac * (255 - a);\n      dst[nextDstOff] = 255;\n      dst[nextDstOff + 1] = 0;\n      dst[nextDstOff + 2] = 0;\n    }\n  }\n\n  if (animate) {\n    var y = 0;\n    const interval = setInterval(() => {\n      processRow(y);\n      outCanvas.getContext(\"2d\")?.putImageData(output, 0, 0);\n      y++;\n      if (y >= h) clearInterval(interval);\n    }, 10);\n  } else {\n    for (var y = 0; y < h; y++) {\n      processRow(y);\n    }\n    outCanvas.getContext(\"2d\")?.putImageData(output, 0, 0);\n  }\n}\n\nfunction getPixels(canvas: HTMLCanvasElement) {\n  var ctx = canvas.getContext('2d');\n  return ctx && ctx.getImageData(0, 0, canvas.width, canvas.height);\n}\n\nfunction createImageData(canvas: HTMLCanvasElement) {\n  var ctx = canvas.getContext('2d');\n  return ctx && ctx.createImageData(canvas.width, canvas.height);\n}\n\n","/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/chartjs-plugin-dragdata.d.ts",[],"/Users/maxpinheiro/Documents/a-eye/src/modules/stateSpaces/kmeans/utils.ts",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":14,"column":11,"nodeType":"162","messageId":"163","endLine":14,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":8,"column":61,"nodeType":"162","messageId":"166","endLine":8,"endColumn":73},{"ruleId":"164","severity":1,"message":"167","line":114,"column":10,"nodeType":"162","messageId":"166","endLine":114,"endColumn":15},{"ruleId":"160","severity":1,"message":"168","line":113,"column":14,"nodeType":"162","messageId":"163","endLine":113,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":6,"column":9,"nodeType":"171","endLine":6,"endColumn":11,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":9,"column":9,"nodeType":"175","endLine":13,"endColumn":11},{"ruleId":"164","severity":1,"message":"176","line":4,"column":21,"nodeType":"162","messageId":"166","endLine":4,"endColumn":36},{"ruleId":"164","severity":1,"message":"177","line":6,"column":7,"nodeType":"162","messageId":"166","endLine":6,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":39,"column":59,"nodeType":"180","messageId":"181","endLine":39,"endColumn":61},{"ruleId":"160","severity":1,"message":"182","line":79,"column":14,"nodeType":"162","messageId":"163","endLine":79,"endColumn":15},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-redeclare","'ModuleSection' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'AxisSelector' is defined but never used.","unusedVar","'getBg' is defined but never used.","'i' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["185"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createImageData' is defined but never used.","'pixelmatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'y' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [props]",{"range":"188","text":"189"},[261,263],"[props]"]